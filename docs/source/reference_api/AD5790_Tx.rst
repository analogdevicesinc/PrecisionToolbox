adi.AD5790.Tx
-------------

**AD5790 Voltage output DAC Class**

adi.AD5790.Tx Transmits data to the AD5790 DAC
The adi.AD5790.Tx System object is a signal sink that can transmit
data to the AD5790.

`tx = adi.AD5790.Tx;`
`tx = adi.AD5790.Tx('uri','ip:192.168.2.1');`

`AD5790 Datasheet <https://www.analog.com/media/en/technical-documentation/data-sheets/ad5790.pdf>`_

Class Properties
================

**CodeSelect Code Select**
   Set to 2s_complement/offset_binaryHelp for adi.AD5790.Tx/CodeSelect is inherited from superclass adi.AD579x.Base

**DDSFrequencies DDS Frequencies**
   Frequencies values in Hz of the DDS tone generators. For complex data devices the input is a [2xN] matrix where N is the available channels on the board. For complex data devices this is at most max(EnabledChannels)*2. For non-complex data devices this is at most max(EnabledChannels). If N < this upper limit, other DDSs are not set.Help for adi.AD5790.Tx/DDSFrequencies is inherited from superclass adi.common.DDS

**DDSPhases DDS Phases**
   Phases of DDS tones in range [0,360000]. For complex data devices the input is a [2xN] matrix where N is the available channels on the board. For complex data devices this is at most max(EnabledChannels)*2. For non-complex data devices this is at most max(EnabledChannels). If N < this upper limit, other DDSs are not set.Help for adi.AD5790.Tx/DDSPhases is inherited from superclass adi.common.DDS

**DDSScales DDS Scales**
   Scale of DDS tones in range [0,1]. For complex data devices the input is a [2xN] matrix where N is the available channels on the board. For complex data devices this is at most max(EnabledChannels)*2. For non-complex data devices this is at most max(EnabledChannels). If N < this upper limit, other DDSs are not set.Help for adi.AD5790.Tx/DDSScales is inherited from superclass adi.common.DDS

**DataSource Data Source**
   Data source, specified as one of the following: 'DMA' — Specify the host as the source of the data. 'DDS' — Specify the DDS on the radio hardware as the source of the data. In this case, each channel has two additive tones.Help for adi.AD5790.Tx/DataSource is inherited from superclass adi.common.DDS

**EnableCyclicBuffers Enable Cyclic Buffers**
   Enable Cyclic Buffers, configures transmit buffers to be cyclic, which makes them continuously repeatHelp for adi.AD5790.Tx/EnableCyclicBuffers is inherited from superclass adi.common.DDS

**EnabledChannels Enabled Channels**
   Indexs of channels to be enabled. Input should be a [1xN] vector with the indexes of channels to be enabled. Order is irrelevant

**PowerDown Power Down**
   Set to true/false to power-up/power-down the device channelsHelp for adi.AD5790.Tx/PowerDown is inherited from superclass adi.AD579x.Base

**Raw Channel Raw Value**
   Help for adi.AD5790.Tx/Raw is inherited from superclass adi.AD579x.Base

**SampleRate Sample Rate**
   Baseband sampling rate in Hz, specified as a scalar in samples per second. Help for adi.AD5790.Tx/SampleRate is inherited from superclass adi.AD579x.Base

**SamplesPerFrame Samples Per Frame**
   Number of samples per frame, specified as an even positive integer. Help for adi.AD5790.Tx/SamplesPerFrame is inherited from superclass adi.AD579x.Base

**URI - remote host URI**
   Hostname or IP address of remote libIIO deviceHelp for adi.AD5790.Tx/uri is inherited from superclass matlabshared.libiio.base

